# Generated by Django 5.2.1 on 2025-06-01 07:15

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.UUIDField(blank=True, db_index=True, null=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login_success", "Login Success"),
                            ("login_failed", "Login Failed"),
                            ("logout", "Logout"),
                            ("register", "Register"),
                            ("password_reset_request", "Password Reset Request"),
                            ("password_reset_success", "Password Reset Success"),
                            ("password_change", "Password Change"),
                            ("token_refresh", "Token Refresh"),
                            ("token_validation_failed", "Token Validation Failed"),
                            ("profile_update", "Profile Update"),
                            ("subscription_change", "Subscription Change"),
                            ("trial_extension", "Trial Extension"),
                            ("account_deactivation", "Account Deactivation"),
                            ("account_reactivation", "Account Reactivation"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("rate_limit_exceeded", "Rate Limit Exceeded"),
                            (
                                "unauthorized_access_attempt",
                                "Unauthorized Access Attempt",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("success", models.BooleanField()),
                ("failure_reason", models.CharField(blank=True, max_length=255)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("referer", models.URLField(blank=True)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                ("request_path", models.CharField(blank=True, max_length=500)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("region", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                "db_table": "auth_audit_logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user_id", "timestamp"],
                        name="auth_audit__user_id_581b94_idx",
                    ),
                    models.Index(
                        fields=["action", "success"],
                        name="auth_audit__action_f4b15f_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="auth_audit__ip_addr_731146_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "timestamp"],
                        name="auth_audit__risk_le_2d7289_idx",
                    ),
                    models.Index(
                        fields=["success", "timestamp"],
                        name="auth_audit__success_d8f308_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.UUIDField(db_index=True, unique=True)),
                ("business_name", models.CharField(blank=True, max_length=255)),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("business_address", models.TextField(blank=True)),
                (
                    "business_type",
                    models.CharField(
                        choices=[
                            ("camera_rental", "Camera Rental"),
                            ("equipment_rental", "Equipment Rental"),
                            ("professional_services", "Professional Services"),
                            ("consulting", "Consulting"),
                            ("beauty_wellness", "Beauty & Wellness"),
                            ("fitness_training", "Fitness Training"),
                            ("home_services", "Home Services"),
                            ("other", "Other"),
                        ],
                        default="camera_rental",
                        max_length=100,
                    ),
                ),
                ("business_description", models.TextField(blank=True)),
                ("website_url", models.URLField(blank=True)),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("freemium", "Freemium"),
                            ("basic", "Basic"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="freemium",
                        max_length=50,
                    ),
                ),
                (
                    "subscription_status",
                    models.CharField(
                        choices=[
                            ("trialing", "Trialing"),
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                            ("unpaid", "Unpaid"),
                            ("incomplete", "Incomplete"),
                            ("incomplete_expired", "Incomplete Expired"),
                            ("paused", "Paused"),
                        ],
                        default="trialing",
                        max_length=50,
                    ),
                ),
                (
                    "subscription_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("subscription_end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "trial_start_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("trial_ends_at", models.DateTimeField()),
                ("trial_extended", models.BooleanField(default=False)),
                ("trial_extension_reason", models.TextField(blank=True)),
                ("trial_extension_count", models.IntegerField(default=0)),
                (
                    "paymongo_customer_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("last_payment_date", models.DateTimeField(blank=True, null=True)),
                ("next_billing_date", models.DateTimeField(blank=True, null=True)),
                ("monthly_bookings_used", models.IntegerField(default=0)),
                ("monthly_bookings_limit", models.IntegerField(default=50)),
                ("storage_used_mb", models.IntegerField(default=0)),
                ("storage_limit_mb", models.IntegerField(default=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("date_format", models.CharField(default="MM/DD/YYYY", max_length=20)),
                ("time_format", models.CharField(default="12h", max_length=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("language", models.CharField(default="en", max_length=10)),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("marketing_emails", models.BooleanField(default=True)),
                ("booking_reminders", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_onboarded", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "user_profiles",
                "indexes": [
                    models.Index(
                        fields=["user_id"], name="user_profil_user_id_fbe33d_idx"
                    ),
                    models.Index(
                        fields=["subscription_status"],
                        name="user_profil_subscri_a66231_idx",
                    ),
                    models.Index(
                        fields=["trial_ends_at"], name="user_profil_trial_e_d4dd95_idx"
                    ),
                    models.Index(
                        fields=["business_type"], name="user_profil_busines_c762f1_idx"
                    ),
                    models.Index(
                        fields=["subscription_plan"],
                        name="user_profil_subscri_b0f60d_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="user_profil_created_26443b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.UUIDField(db_index=True)),
                ("session_token", models.CharField(max_length=255, unique=True)),
                ("refresh_token", models.CharField(blank=True, max_length=255)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("browser", models.CharField(blank=True, max_length=100)),
                ("operating_system", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField()),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
            ],
            options={
                "db_table": "user_sessions",
                "indexes": [
                    models.Index(
                        fields=["user_id", "is_active"],
                        name="user_sessio_user_id_bb1b83_idx",
                    ),
                    models.Index(
                        fields=["session_token"], name="user_sessio_session_baddb8_idx"
                    ),
                    models.Index(
                        fields=["expires_at", "is_active"],
                        name="user_sessio_expires_45697a_idx",
                    ),
                    models.Index(
                        fields=["last_activity"], name="user_sessio_last_ac_7cb421_idx"
                    ),
                ],
            },
        ),
    ]
