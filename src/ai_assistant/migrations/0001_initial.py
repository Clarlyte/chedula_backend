# Generated by Django 5.2.1 on 2025-06-06 06:14

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AIAction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message_id", models.BigIntegerField(db_index=True)),
                ("user_id", models.UUIDField(db_index=True)),
                ("session_id", models.UUIDField(blank=True, db_index=True, null=True)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("create_booking", "Create Booking"),
                            ("update_booking", "Update Booking"),
                            ("cancel_booking", "Cancel Booking"),
                            ("reschedule_booking", "Reschedule Booking"),
                            ("check_availability", "Check Availability"),
                            ("create_customer", "Create Customer"),
                            ("update_customer", "Update Customer"),
                            ("search_customer", "Search Customer"),
                            ("get_customer_history", "Get Customer History"),
                            ("create_service", "Create Service"),
                            ("update_service", "Update Service"),
                            ("update_pricing", "Update Pricing"),
                            (
                                "check_equipment_availability",
                                "Check Equipment Availability",
                            ),
                            ("create_equipment", "Create Equipment"),
                            ("update_equipment", "Update Equipment"),
                            ("send_notification", "Send Notification"),
                            ("generate_report", "Generate Report"),
                            ("export_data", "Export Data"),
                            ("error_occurred", "Error Occurred"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "target_model",
                    models.CharField(
                        choices=[
                            ("booking", "Booking"),
                            ("customer", "Customer"),
                            ("service", "Service"),
                            ("equipment", "Equipment"),
                            ("notification", "Notification"),
                            ("report", "Report"),
                            ("system", "System"),
                        ],
                        max_length=50,
                    ),
                ),
                ("target_id", models.UUIDField(blank=True, null=True)),
                ("parameters", models.JSONField(default=dict)),
                ("result", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("rolled_back", "Rolled Back"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("rollback_data", models.JSONField(blank=True, default=dict)),
                ("can_rollback", models.BooleanField(default=True)),
                ("rollback_executed_at", models.DateTimeField(blank=True, null=True)),
                ("requires_confirmation", models.BooleanField(default=False)),
                ("confirmed_by_user", models.BooleanField(default=False)),
                (
                    "confirmation_requested_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "ai_actions",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user_id", "created_at"],
                        name="ai_actions_user_id_831aac_idx",
                    ),
                    models.Index(
                        fields=["message_id"], name="ai_actions_message_79380d_idx"
                    ),
                    models.Index(
                        fields=["session_id", "created_at"],
                        name="ai_actions_session_52fc0f_idx",
                    ),
                    models.Index(
                        fields=["action_type", "status"],
                        name="ai_actions_action__e54349_idx",
                    ),
                    models.Index(
                        fields=["target_model", "target_id"],
                        name="ai_actions_target__51061f_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="ai_actions_status_6675cd_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("session_id", models.UUIDField(blank=True, db_index=True, null=True)),
                ("user_id", models.UUIDField(db_index=True)),
                (
                    "sender_type",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("ai", "AI Assistant"),
                            ("system", "System"),
                        ],
                        max_length=10,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("processing", "Processing"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                            ("edited", "Edited"),
                            ("deleted", "Deleted"),
                        ],
                        default="sent",
                        max_length=20,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("ai_model_used", models.CharField(blank=True, max_length=100)),
                ("processing_time_ms", models.IntegerField(blank=True, null=True)),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("entities_extracted", models.JSONField(blank=True, default=list)),
                ("intent_recognized", models.CharField(blank=True, max_length=100)),
                ("parent_message_id", models.BigIntegerField(blank=True, null=True)),
                ("tokens_used", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "chat_messages",
                "ordering": ["timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user_id", "timestamp"],
                        name="chat_messag_user_id_e385b8_idx",
                    ),
                    models.Index(
                        fields=["session_id", "timestamp"],
                        name="chat_messag_session_4a3fea_idx",
                    ),
                    models.Index(
                        fields=["sender_type", "timestamp"],
                        name="chat_messag_sender__6e97d6_idx",
                    ),
                    models.Index(
                        fields=["status", "timestamp"],
                        name="chat_messag_status_6f07f0_idx",
                    ),
                    models.Index(
                        fields=["parent_message_id"],
                        name="chat_messag_parent__f12578_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_id", models.UUIDField(db_index=True)),
                ("title", models.CharField(blank=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("ended", "Ended"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("context", models.JSONField(blank=True, default=dict)),
                ("last_intent", models.CharField(blank=True, max_length=100)),
                ("active_workflow", models.CharField(blank=True, max_length=100)),
                ("message_count", models.IntegerField(default=0)),
                ("actions_performed", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "chat_sessions",
                "ordering": ["-last_activity"],
                "indexes": [
                    models.Index(
                        fields=["user_id", "last_activity"],
                        name="chat_sessio_user_id_b6afce_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="chat_sessio_status_c48a5f_idx",
                    ),
                    models.Index(
                        fields=["user_id", "status"],
                        name="chat_sessio_user_id_39df70_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ConversationContext",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("session_id", models.UUIDField(db_index=True)),
                ("user_id", models.UUIDField(db_index=True)),
                (
                    "context_type",
                    models.CharField(
                        choices=[
                            ("entity", "Entity"),
                            ("intent", "Intent"),
                            ("workflow", "Workflow State"),
                            ("preference", "User Preference"),
                            ("temporary", "Temporary Data"),
                        ],
                        max_length=20,
                    ),
                ),
                ("key", models.CharField(max_length=100)),
                ("value", models.JSONField()),
                ("confidence", models.FloatField(default=1.0)),
                ("source_message_id", models.BigIntegerField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "conversation_context",
                "indexes": [
                    models.Index(
                        fields=["session_id", "context_type"],
                        name="conversatio_session_65e48e_idx",
                    ),
                    models.Index(
                        fields=["user_id", "context_type"],
                        name="conversatio_user_id_5534b3_idx",
                    ),
                    models.Index(
                        fields=["key", "session_id"], name="conversatio_key_448cf1_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="conversatio_expires_1b0bce_idx"
                    ),
                ],
                "unique_together": {("session_id", "context_type", "key")},
            },
        ),
    ]
