version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  web:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/src
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./logs:/app/logs
    extra_hosts:
      - "db.lyidjlqggxajluadtklx.supabase.co:52.45.94.125"  # Force IPv4
    command: >
      sh -c "
        echo 'Starting backend setup...' &&
        python src/manage.py collectstatic --noinput --clear &&
        echo 'Running database migrations...' &&
        python src/manage.py migrate &&
        echo 'Starting Django ASGI server with WebSocket support...' &&
        cd src && daphne -b 0.0.0.0 -p 8000 core.asgi:application
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  celery_worker:
    build: .
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/src
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./media:/app/media
      - ./logs:/app/logs
    extra_hosts:
      - "db.lyidjlqggxajluadtklx.supabase.co:52.45.94.125"  # Force IPv4
    command: >
      sh -c "
        echo 'Starting Celery worker...' &&
        cd src &&
        celery -A core worker --loglevel=info --concurrency=2
      "
    healthcheck:
      test: ["CMD", "sh", "-c", "cd /app/src && celery -A core inspect ping"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  celery_beat:
    build: .
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app/src
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./media:/app/media
      - ./logs:/app/logs
    extra_hosts:
      - "db.lyidjlqggxajluadtklx.supabase.co:52.45.94.125"  # Force IPv4
    command: >
      sh -c "
        echo 'Starting Celery beat scheduler...' &&
        cd src &&
        celery -A core beat --loglevel=info
      "
    healthcheck:
      test: ["CMD", "sh", "-c", "ps aux | grep 'celery.*beat' | grep -v grep"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  redis_data: 